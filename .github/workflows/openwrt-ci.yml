#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
    - master
    schedule:
      - cron: 0 20 * * *
    release:
      types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt and release
    runs-on: ubuntu-18.04

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h
      - name: 11111111
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/openwrt-develop/luci-theme-atmaterial
          git clone https://github.com/alex689/luci-app-adguardhome.git
          git clone https://github.com/alex689/luci-app-passwall-1.git


      - name: Update feeds
        run: |
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          # 

          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 

          # 以下为定制化固件选项和说明:
          #

          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #

          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 

          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          EOF

          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF

          # 编译UEFI固件:
          cat >> .config <<EOF
          CONFIG_EFI_IMAGES=y
          EOF

          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF

          # 多文件系统支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_kmod-fs-squashfs=y
          EOF

          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF

          # 常用LuCI插件选择:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-app-accesscontrol=y
          CONFIG_PACKAGE_luci-app-acme=y
          CONFIG_PACKAGE_luci-app-adblock=n
          CONFIG_PACKAGE_luci-app-adbyby-plus=m
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-advanced-reboot=n
          CONFIG_PACKAGE_luci-app-advancedsetting=y
          CONFIG_PACKAGE_luci-app-airplay2=m
          CONFIG_PACKAGE_luci-app-amule=y
          CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_luci-app-arpbind=n
          CONFIG_PACKAGE_luci-app-attendedsysupgrade=n
          CONFIG_PACKAGE_luci-app-autoreboot=y
          CONFIG_PACKAGE_luci-app-baidupcs-web=m
          CONFIG_PACKAGE_luci-app-bcp38=n
          CONFIG_PACKAGE_luci-app-bird1-ipv4=n
          CONFIG_PACKAGE_luci-app-bird1-ipv6=n
          CONFIG_PACKAGE_luci-app-bmx7=n
          CONFIG_PACKAGE_luci-app-brook-server=n
          CONFIG_PACKAGE_luci-app-cifs-mount=m
          CONFIG_PACKAGE_luci-app-cifsd=n
          CONFIG_PACKAGE_luci-app-clamav=n
          CONFIG_PACKAGE_luci-app-commands=n
          CONFIG_PACKAGE_luci-app-cpufreq=y
          CONFIG_PACKAGE_luci-app-cshark=n
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-diag-core=n
          CONFIG_PACKAGE_luci-app-diskman=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_mdadm=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_kmod_md_raid456=y
          CONFIG_PACKAGE_luci-app-dnscrypt-proxy=n
          # CONFIG_PACKAGE_luci-app-dockerman=y
          # CONFIG_PACKAGE_luci-app-dockerman_INCLUDE_docker_ce=y
          # CONFIG_PACKAGE_luci-app-dockerman_INCLUDE_ttyd=y
          CONFIG_PACKAGE_luci-app-dump1090=n
          CONFIG_PACKAGE_luci-app-dynapoint=n
          CONFIG_PACKAGE_luci-app-e2guardian=n
          CONFIG_PACKAGE_luci-app-eqos=y
          CONFIG_PACKAGE_luci-app-fileassistant=n
          CONFIG_PACKAGE_luci-app-filebrowser=n
          CONFIG_PACKAGE_luci-app-filetransfer=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-flowoffload=y
          CONFIG_PACKAGE_luci-app-freifunk-diagnostics=n
          CONFIG_PACKAGE_luci-app-freifunk-policyrouting=n
          CONFIG_PACKAGE_luci-app-freifunk-widgets=n
          CONFIG_PACKAGE_luci-app-frpc=n
          CONFIG_PACKAGE_luci-app-fwknopd=n
          CONFIG_PACKAGE_luci-app-guest-wifi=n
          CONFIG_PACKAGE_luci-app-haproxy-tcp=n
          CONFIG_PACKAGE_luci-app-hd-idle=y
          CONFIG_PACKAGE_luci-app-hnet=n
          CONFIG_PACKAGE_luci-app-https-dns-proxy=n
          CONFIG_PACKAGE_luci-app-ipsec-vpnserver-manyusers=n
          CONFIG_PACKAGE_luci-app-kcptun=n
          CONFIG_PACKAGE_luci-app-php-kodexplorer=y
          CONFIG_PACKAGE_luci-app-ksmbd=y
          CONFIG_PACKAGE_luci-app-lxc=n
          CONFIG_PACKAGE_luci-app-meshwizard=n
          CONFIG_PACKAGE_luci-app-minidlna=n
          CONFIG_PACKAGE_luci-app-mjpg-streamer=n
          CONFIG_PACKAGE_luci-app-mtwifi=n
          CONFIG_PACKAGE_luci-app-music-remote-center=m
          CONFIG_PACKAGE_luci-app-mwan3=n
          CONFIG_PACKAGE_luci-app-mwan3helper=n
          CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_luci-app-nfs=y
          CONFIG_PACKAGE_luci-app-nft-qos=n
          CONFIG_PACKAGE_luci-app-nlbwmon=y
          CONFIG_PACKAGE_luci-app-noddos=n
          CONFIG_PACKAGE_luci-app-nps=n
          CONFIG_PACKAGE_luci-app-ntpc=n
          CONFIG_PACKAGE_luci-app-oaf=y
          CONFIG_PACKAGE_luci-app-ocserv=n
          CONFIG_PACKAGE_luci-app-olsr=n
          CONFIG_PACKAGE_luci-app-olsr-services=n
          CONFIG_PACKAGE_luci-app-olsr-viz=n
          CONFIG_PACKAGE_luci-app-onliner=y
          # CONFIG_PACKAGE_luci-app-openclash=m
          CONFIG_PACKAGE_luci-app-openvpn=n
          CONFIG_PACKAGE_luci-app-openvpn-server=n
          CONFIG_PACKAGE_luci-app-opkg=y
          CONFIG_PACKAGE_luci-app-p910nd=n
          CONFIG_PACKAGE_luci-app-pagekitec=n

          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ipt2socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook=n
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_kcptun=n
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_pdnsd=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_dns2socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_v2ray-plugin=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_simple-obfs=y

          CONFIG_PACKAGE_luci-app-polipo=n
          CONFIG_PACKAGE_luci-app-pppoe-relay=n
          CONFIG_PACKAGE_luci-app-pppoe-server=n
          CONFIG_PACKAGE_luci-app-pptp-vpnserver-manyusers=n
          CONFIG_PACKAGE_luci-app-privoxy=n
          CONFIG_PACKAGE_luci-app-qbittorrent=y
          CONFIG_PACKAGE_luci-app-qos=n
          CONFIG_PACKAGE_luci-app-radicale=n
          CONFIG_PACKAGE_luci-app-ramfree=y
          CONFIG_PACKAGE_luci-app-rp-pppoe-server=n
          CONFIG_PACKAGE_luci-app-samba=n
          CONFIG_PACKAGE_luci-app-samba4=n
          CONFIG_PACKAGE_luci-app-serverchan=y
          CONFIG_PACKAGE_luci-app-shadowsocks-libev=n
          CONFIG_PACKAGE_luci-app-shairplay=n
          CONFIG_PACKAGE_luci-app-siitwizard=n
          CONFIG_PACKAGE_luci-app-simple-adblock=n
          CONFIG_PACKAGE_luci-app-smartdns=y
          CONFIG_PACKAGE_luci-app-softethervpn=m
          CONFIG_PACKAGE_luci-app-splash=n
          CONFIG_PACKAGE_luci-app-sqm=y
          CONFIG_PACKAGE_luci-app-squid=n
          CONFIG_PACKAGE_luci-app-ssr-libev-server=n

          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=n
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=n

          CONFIG_PACKAGE_luci-app-ssr-python-pro-server=n
          CONFIG_PACKAGE_luci-app-statistics=n
          CONFIG_PACKAGE_luci-app-syncdial=m
          CONFIG_PACKAGE_luci-app-syncthing=n
          CONFIG_PACKAGE_luci-app-tinyproxy=n
          CONFIG_PACKAGE_luci-app-transmission=n
          CONFIG_PACKAGE_transmission-web-control=n
          CONFIG_PACKAGE_luci-app-travelmate=n
          CONFIG_PACKAGE_luci-app-trojan-server=n
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-udpxy=n
          CONFIG_PACKAGE_luci-app-uhttpd=n
          CONFIG_PACKAGE_luci-app-unblockmusic=y
          CONFIG_UnblockNeteaseMusic_Go=y
          CONFIG_UnblockNeteaseMusic_NodeJS=n
          CONFIG_PACKAGE_luci-app-unbound=n
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-app-usb-printer=m
          CONFIG_PACKAGE_luci-app-v2ray-server=n
          CONFIG_PACKAGE_luci-app-verysync=m
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-vnstat=y
          CONFIG_PACKAGE_luci-app-vpnbypass=n
          CONFIG_PACKAGE_luci-app-vsftpd=m
          CONFIG_PACKAGE_luci-app-watchcat=y
          CONFIG_PACKAGE_luci-app-webadmin=n
          CONFIG_PACKAGE_luci-app-wifischedule=n
          CONFIG_PACKAGE_luci-app-wireguard=n
          CONFIG_PACKAGE_luci-app-wol=n
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-app-xlnetacc=y
          CONFIG_PACKAGE_luci-app-zerotier=m

          # CONFIG_PACKAGE_samba4-admin=y
          # CONFIG_PACKAGE_samba4-server=y
          # CONFIG_PACKAGE_samba4-utils=y

          CONFIG_PACKAGE_dnsmasq=n
          CONFIG_PACKAGE_dnsmasq-full=y
          CONFIG_PACKAGE_dnsmasq_full_dhcp=y
          CONFIG_PACKAGE_dnsmasq_full_ipset=y

          EOF

          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-opentomato=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_luci-theme-material=n
          CONFIG_PACKAGE_luci-theme-openwrt=n
          CONFIG_PACKAGE_luci-theme-rosy=y
          CONFIG_PACKAGE_luci-theme-darkmatter=y
          
          EOF

          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-ssl-nginx=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-proto-ppp=y
          CONFIG_LUCI_LANG_zh_Hans=y
          CONFIG_LUCI_LANG_en=y
          CONFIG_PACKAGE_nginx-mod-luci-ssl=y
          CONFIG_NGINX_HTTP_V2=y
          CONFIG_NGINX_DAV=y
          CONFIG_NGINX_NAXSI=n
          CONFIG_PACKAGE_python3=y
          CONFIG_PACKAGE_python3-yaml=y
          CONFIG_PACKAGE_python3-urllib3=y
          CONFIG_PACKAGE_default-settings=y
          CONFIG_PACKAGE_iptables-mod-nat-extra=y
          CONFIG_PACKAGE_iptables-mod-filter=y
          CONFIG_PACKAGE_bind-dig=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_httping=y
          CONFIG_PACKAGE_tcping=y
          CONFIG_PACKAGE_autocore=n
          CONFIG_PACKAGE_automount=y
          CONFIG_PACKAGE_autosamba=n
          CONFIG_PACKAGE_fdisk=y
          CONFIG_PACKAGE_cfdisk=y
          CONFIG_PACKAGE_iptables-mod-fullconenat=y
          # CONFIG_PACKAGE_git=y
          # CONFIG_PACKAGE_git-http=y
          CONFIG_PACKAGE_antileech=y
          CONFIG_PACKAGE_acme-dnsapi=y
          CONFIG_PACKAGE_pdnsd-alt=y
          CONFIG_PACKAGE_ddns-scripts_aliyun=y
          CONFIG_PACKAGE_docker-ce=n
          CONFIG_V2RAY_COMPRESS_UPX=n
          # CONFIG_DEVEL=y
          # CONFIG_TOOLCHAINOPTS=y
          # CONFIG_GCC_USE_VERSION_7=y
          CONFIG_PACKAGE_ksmbd-utils=y
          CONFIG_PACKAGE_lm-sensors-detect=y
          CONFIG_PACKAGE_bc=y
          CONFIG_PACKAGE_ethtool=y
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_file=y
          CONFIG_PACKAGE_adguardhome=y
          CONFIG_PACKAGE_ariang-nginx=y
          CONFIG_PACKAGE_kmod-usb-printer=y
          CONFIG_PACKAGE_kmod-vmxnet3=y
          CONFIG_PACKAGE_kmod-igbvf=y
          CONFIG_PACKAGE_kmod-ixgbe=y
          CONFIG_PACKAGE_kmod-pcnet32=y
          # CONFIG_PACKAGE_kmod-r8125=y
          CONFIG_PACKAGE_kmod-8139cp=y
          CONFIG_PACKAGE_kmod-8139too=y
          CONFIG_PACKAGE_kmod-i40e=y
          CONFIG_PACKAGE_kmod-i40evf=y
          CONFIG_PACKAGE_kmod-usb-net=y
          CONFIG_PACKAGE_kmod-usb-net-rtl8150=y
          CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
          CONFIG_PACKAGE_kmod-sound-core=y
          CONFIG_PACKAGE_kmod-usb-audio=y
          CONFIG_GRUB_BOOTOPTS="nomodeset"
          CONFIG_KERNEL_BUILD_USER="GaryPang"
          CONFIG_GRUB_TITLE="OpenWrt compiled by GaryPang"
          CONFIG_KERNEL_BUILD_DOMAIN="https://github.com/garypang13/Actions-OpenWrt-Nginx"

          # CONFIG_PACKAGE_php7=y
          # CONFIG_PACKAGE_php7-fpm=y
          # CONFIG_PACKAGE_php7-mod-curl=y
          # CONFIG_PACKAGE_php7-mod-gd=y
          # CONFIG_PACKAGE_php7-mod-iconv=y
          # CONFIG_PACKAGE_php7-mod-json=y
          # CONFIG_PACKAGE_php7-mod-mbstring=y
          # CONFIG_PACKAGE_php7-mod-opcache=y
          # CONFIG_PACKAGE_php7-mod-session=y
          # CONFIG_PACKAGE_php7-mod-zip=y
          # CONFIG_PACKAGE_php7-mod-sqlite3=y
          # CONFIG_PACKAGE_php7-mod-openssl=y
          EOF

          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF

          # 
          # ========================固件定制部分结束========================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./bin/targets/

      - name: Create release
        if: github.event == 'push'
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false      

      - name: Upload release asset
        if: github.event == 'push'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/targets/*/*/
